{"version":3,"sources":["AlertMessageTest.js"],"names":["wrapper","t","is","length","name","children","first","subview","containsMatchingElement","withStyle","color","props","style","hidden"],"mappings":"AAAA,wB;AACA,4B;AACA;AACA,+D;AACA,8B;;;AAGA,GAAMA,SAAU,oBAAQ,sDAAc,MAAM,OAApB,EAAR,CAAhB;;AAEA,kBAAK,kBAAL,CAAyB,SAACC,CAAD,CAAO;AAC9BA,EAAEC,EAAF,CAAKF,QAAQG,MAAb,CAAqB,CAArB;AACD,CAFD;;AAIA,kBAAK,qBAAL,CAA4B,SAACF,CAAD,CAAO;AACjCA,EAAEC,EAAF,CAAKF,QAAQI,IAAR,EAAL,CAAqB,MAArB;AACAH,EAAEC,EAAF,CAAKF,QAAQK,QAAR,GAAmBF,MAAxB,CAAgC,CAAhC;AACAF,EAAEC,EAAF,CAAKF,QAAQK,QAAR,GAAmBC,KAAnB,GAA2BF,IAA3B,EAAL,CAAwC,MAAxC;;AAEA,GAAMG,SAAUP,QAAQK,QAAR,GAAmBC,KAAnB,EAAhB;AACAL,EAAEC,EAAF,CAAKK,QAAQF,QAAR,GAAmBF,MAAxB,CAAgC,CAAhC;AACD,CAPD;;AASA,kBAAK,2BAAL,CAAkC,SAACF,CAAD,CAAO;AACvCA,EAAEC,EAAF,CAAKF,QAAQQ,uBAAR,CAAgC,6DAAhC,CAAL,CAA0D,IAA1D;AACD,CAFD;;AAIA,kBAAK,oCAAL,CAA2C,SAACP,CAAD,CAAO;AAChD,GAAMQ,WAAY,oBAAQ,sDAAc,MAAM,OAApB,CAA4B,MAAO,CAACC,MAAO,KAAR,CAAnC,EAAR,CAAlB;AACAT,EAAEC,EAAF,CAAKO,UAAUE,KAAV,GAAkBC,KAAlB,CAAwB,CAAxB,EAA2BF,KAAhC,CAAuC,KAAvC;AACD,CAHD;;AAKA,kBAAK,YAAL,CAAmB,SAACT,CAAD,CAAO;AACxB,GAAMY,QAAS,oBAAQ,sDAAc,MAAM,OAApB,CAA4B,KAAM,KAAlC,EAAR,CAAf;AACAZ,EAAEC,EAAF,CAAKW,OAAOR,QAAP,GAAkBF,MAAvB,CAA+B,CAA/B;AACD,CAHD","file":"AlertMessageTest.js","sourcesContent":["import test from 'ava'\nimport React from 'react'\nimport { Text } from 'react-native'\nimport AlertMessage from '../../App/Components/AlertMessage'\nimport { shallow } from 'enzyme'\n\n// Basic wrapper\nconst wrapper = shallow(<AlertMessage title='howdy' />)\n\ntest('component exists', (t) => {\n  t.is(wrapper.length, 1) // exists\n})\n\ntest('component structure', (t) => {\n  t.is(wrapper.name(), 'View')\n  t.is(wrapper.children().length, 1) // has 1 child\n  t.is(wrapper.children().first().name(), 'View') // that child is View\n\n  const subview = wrapper.children().first()\n  t.is(subview.children().length, 1)\n})\n\ntest('Has text and set properly', (t) => {\n  t.is(wrapper.containsMatchingElement(<Text>HOWDY</Text>), true)\n})\n\ntest('style props are passed to top view', (t) => {\n  const withStyle = shallow(<AlertMessage title='howdy' style={{color: 'red'}} />)\n  t.is(withStyle.props().style[1].color, 'red')\n})\n\ntest('show false', (t) => {\n  const hidden = shallow(<AlertMessage title='howdy' show={false} />)\n  t.is(hidden.children().length, 0)\n})\n"]}